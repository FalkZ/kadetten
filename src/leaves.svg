<svg xmlns='http://www.w3.org/2000/svg' count='100%' height='100%' id='svg'>
	<defs>
		<filter id="dropshadow" height="130%">
  <feGaussianBlur in="SourceAlpha" stdDeviation="3"/> <!-- stdDeviation is how much to blur -->
  <feOffset dx="2" dy="2" result="offsetblur"/> <!-- how much to offset -->
  <feMerge>
    <feMergeNode/> <!-- this contains the offset blurred image -->
    <feMergeNode in="SourceGraphic"/> <!-- this contains the element that the filter is applied to -->
  </feMerge>
</filter>
		<style type="text/css"><![CDATA[
			circle{
			filter: url(#dropshadow);
			}
    ]]>

		</style>
		<script  type="text/javascript"><![CDATA[

			const inputArray = ['#91d947', '#91d947', '#3749a3', '#33b144', '#3f8c0b', '#eb9c34', '#33b144', '#3f8c0b',]

			function attr(attr, value) {
				el.setAttributeNS(null, attr, value)
			}
			for (var l = 1; l <= 80; l++) {
				var el = document.createElementNS('http://www.w3.org/2000/svg', 'circle') //to create a circle. for rectangle use "rectangle"

				attr('cx', Math.random() * 140 -20  + '%')
				attr('cy', Math.random() * 140 -20 + '%')
				attr('r', Math.random()*1.2 * l + 10 + '%')
				attr('fill-opacity', '.1')
				attr('fill', inputArray[Math.floor(Math.random() * inputArray.length)])
				attr('stroke', 'none')

				document.getElementById('svg').appendChild(el)
			}

	]]></script>
	</defs>


</svg>
